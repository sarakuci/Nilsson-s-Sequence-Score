<Window x:Class="EightPuzzleSolverApp.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:vm="clr-namespace:EightPuzzleSolverApp.ViewModel"
        xmlns:model="clr-namespace:EightPuzzleSolverApp.Model"
        xmlns:converters="clr-namespace:EightPuzzleSolverApp.Converters"
        mc:Ignorable="d ignore"
        Height="600" Width="900" MinHeight="300" MinWidth="600"
        WindowStartupLocation="CenterScreen"
        Title="8-Puzzle Solver"
        Loaded="MainWindow_OnLoaded"
        DataContext="{Binding Main, Source={StaticResource Locator}}">
    <Window.Resources>
        <converters:EnumToStringConverter x:Key="enumToStringConverter"/>
    </Window.Resources>

    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="10*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Panel.Style>
                <Style>
                    <Setter Property="Control.IsEnabled" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding State}" Value="{x:Static vm:WorkState.Idle}">
                            <Setter Property="Control.IsEnabled" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Panel.Style>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Algorithm Combobox -->
            <Grid Grid.Row="0" Margin="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="10*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="Algorithm: "/>
                <ComboBox Grid.Column="1"
                            ItemsSource="{Binding Algorithms}" 
                            SelectedValue="{Binding SelectedAlgorithm}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource enumToStringConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>

            <!-- Heuristics Combobox -->
            <Grid Grid.Row="1" Margin="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="10*"/>
                </Grid.ColumnDefinitions>

                <Grid.Style>
                    <Style>
                        <Setter Property="Control.Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedAlgorithm}" Value="{x:Static model:Algorithm.IterativeDeepeningSearch}">
                                <Setter Property="Control.Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SelectedAlgorithm}" Value="{x:Static model:Algorithm.DepthLimitedSearch}">
                                <Setter Property="Control.Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <TextBlock Grid.Column="0" Text="Heuristic: "/>
                <ComboBox Grid.Column="1"
                            ItemsSource="{Binding HeuristicFunctions}" 
                            SelectedValue="{Binding SelectedHeuristicFunction}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource enumToStringConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>
            
            <!-- Board TextArea -->
            <Grid Grid.Row="2" Margin="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="10*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="Board: "/>
                <TextBox Grid.Column="1" Width="90" Height="90" HorizontalAlignment="Left" AcceptsReturn="True"
                         Text="{Binding BoardInputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
            

            <!-- CreateBoard and SolveStop Buttons -->
            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Margin="3,5" Padding="40,3" HorizontalAlignment="Left" Content="Create/Reset"
                            Command="{Binding FillBoardCommand}"/>
                <!-- Size of the board-->
                <!--<StackPanel Grid.Row="0" Orientation="Horizontal">
                    <xctk:IntegerUpDown Margin="3" Padding="10,0" Minimum="2" Maximum="5"
                                        Value="{Binding ColumnCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock Margin="3" Text="x" VerticalAlignment="Center"/>
                    <xctk:IntegerUpDown Margin="3" Padding="10,0" Minimum="2" Maximum="5"
                                        Value="{Binding RowCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                
                    <Button Margin="8,3" Padding="10,3" Content="Generate"
                            Command="{Binding GenerateBoardCommand}"/>
                </StackPanel>-->
                <Button Grid.Column="1" Padding="40,3" Margin="3,5" FontSize="14" HorizontalAlignment="Right"
                        Command="{Binding SolveOrStopCommand}">
                    <Button.Style>
                        <Style>
                            <Setter Property="Button.Content" Value="Solve"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding State}" Value="{x:Static vm:WorkState.Searching}">
                                    <Setter Property="Button.Content" Value="Stop"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding State}" Value="{x:Static vm:WorkState.ShowingMoves}">
                                    <Setter Property="Button.Content" Value="Stop"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding State}" Value="{x:Static vm:WorkState.Stopping}">
                                    <Setter Property="Button.Content" Value="Stop"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>

            <!-- TimeElapsed label -->
            <Grid Grid.Row="4">
                <Grid.Style>
                    <Style>
                        <Setter Property="Control.Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SearchResult}" Value="{x:Null}">
                                <Setter Property="Control.Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <StackPanel Margin="3" Orientation="Horizontal">
                    <TextBlock Text="Time elapsed: "/>
                    <TextBlock FontWeight="Bold" Text="{Binding SearchResult.TimeElapsed.TotalSeconds, StringFormat={}{0:N3}}"/>
                    <TextBlock Text=" sec"/>
                </StackPanel>
            </Grid>

            <!-- ProgressBar -->
            <Grid Grid.Row="4">
                <Grid.Style>
                    <Style>
                        <Setter Property="Control.Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding State}" Value="{x:Static vm:WorkState.Idle}">
                                <Setter Property="Control.Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <ProgressBar Height="20"
                         Value="{Binding CurrentMoveNumber}" Maximum="{Binding SearchResult.MoveCount}">
                    <ProgressBar.Style>
                        <Style>
                            <Setter Property="ProgressBar.IsIndeterminate" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding State}" Value="{x:Static vm:WorkState.ShowingMoves}">
                                    <Setter Property="ProgressBar.IsIndeterminate" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Panel.Style>
                        <Style>
                            <Setter Property="Control.Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding State}" Value="{x:Static vm:WorkState.ShowingMoves}">
                                    <Setter Property="Control.Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Panel.Style>

                    <TextBlock Text="{Binding CurrentMoveNumber}"/>
                    <TextBlock Text="/"/>
                    <TextBlock Text="{Binding SearchResult.MoveCount}"/>
                </StackPanel>
            </Grid>
        </Grid>
        <Grid Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="70"/>
            </Grid.ColumnDefinitions>

            <Viewbox Grid.Column="0" Stretch="Uniform">
                <Border BorderBrush="#663333" BorderThickness="2">
                    <UniformGrid Width="200" Height="200" Name="grdBoard" Rows="3" Columns="3" Background="#498f83">
                        <Border Background="WhiteSmoke" Margin="3" CornerRadius="3">
                            <TextBlock Text="8" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
                        </Border>
                        <Border Background="WhiteSmoke" Margin="3" CornerRadius="3">
                            <TextBlock Text="4" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
                        </Border>
                        <Border Background="WhiteSmoke" Margin="3" CornerRadius="3">
                            <TextBlock Text="2" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
                        </Border>
                        <Border Background="WhiteSmoke" Margin="3" CornerRadius="3">
                            <TextBlock Text="3" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
                        </Border>
                    </UniformGrid>
                </Border>
            </Viewbox>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid.Style>
                    <Style>
                        <Setter Property="Control.Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SearchResult}" Value="{x:Null}">
                                <Setter Property="Control.Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SearchResult.Success}" Value="False">
                                <Setter Property="Control.Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <StackPanel Grid.Row="0" Margin="0,0,0,3" Orientation="Horizontal">
                    <TextBlock FontWeight="Bold"
                               Text="{Binding SearchResult.MoveCount}"/>
                    <TextBlock Text=" moves"/>
                </StackPanel>

                <ListBox Grid.Row="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionChanged="lstMoves_OnSelectionChanged"
                         ItemsSource="{Binding SearchResult.SolutionActions}" SelectedIndex="{Binding CurrentMoveIndex, Mode=OneWay}">
                    <ListBox.ToolTip>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Movement directions of the "/>
                            <TextBlock FontWeight="Bold" Text="blank tile"/>
                        </StackPanel>
                    </ListBox.ToolTip>
                </ListBox>

                <Button Grid.Row="2" Margin="0,3,0,0" Padding="0,3" Content="Show"
                        Command="{Binding ShowMovesCommand}"/>
            </Grid>

        </Grid>
    </Grid>
</Window>
